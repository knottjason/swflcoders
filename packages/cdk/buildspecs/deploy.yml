version: 0.2

env:
  variables:
    NODE_ENV: production

phases:
  install:
    commands:
      - apt-get update -y
      - curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
      - apt-get install -y nodejs jq
      - corepack enable
      - yarn set version stable
      - npm i -g aws-cdk@2.87.0
  pre_build:
    commands:
      - node -v
      - yarn -v
      - cdk --version
      - yarn install --immutable
      - echo "Stage: $STAGE"
      - echo "Region: $AWS_REGION"
  build:
    commands:
      # Synthesize and deploy all app stacks for this STAGE using compiled entrypoint
      - npx cdk synth -a "node packages/cdk/dist/bin/app.js" --context stage=$STAGE
      # Optional: bootstrap if missing (run once per account/region)
      - |
        if ! aws cloudformation describe-stacks --stack-name CDKToolkit >/dev/null 2>&1; then
          echo "Bootstrapping CDK..."
          npx cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION
        else
          echo "CDKToolkit already exists."
        fi
      - npx cdk deploy --all -a "node packages/cdk/dist/bin/app.js" --context stage=$STAGE --require-approval never --verbose
  post_build:
    commands:
      # Persist stack outputs for this stage (used by E2E step as a fallback)
      - STACK_NAME="ApiStack-$STAGE"
      - aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].Outputs" --output json > "outputs-$STAGE.json"
artifacts:
  files:
    - "outputs-$STAGE.json"
    - "cdk.out/**/*"
cache:
  paths:
    - '/root/.cache/yarn/**'
